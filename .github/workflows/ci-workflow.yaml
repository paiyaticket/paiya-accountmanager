name: CI Workflow

on:
  push:
    branches: [ "dev", "ci-workflow" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build
      run: ./gradlew build
      
  
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Get the code 
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Create and run mongodb docker container
        uses: DigiPie/mongo-action@v2.0.1
        with:
          image_version: latest
          port: 27017

      - name: Install mongosh command
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Test mongo connection
        run: |
          sudo mongosh localhost:27017
          use paiya_accountmanager

      - name: Make integration tests with Gradle
        id: make-integration-test
        run: ./gradlew integrationTest

      - name: upload test report
        if: ${{ failure() }}
        id: upload-test-report
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-report-artifact
          path: ${{ github.workspace }}/build/reports/tests/integrationTest
          retention-days: 1

      - name: Output report download link
        if: ${{ steps.make-integration-test.conclusion == 'failure' }}
        run: echo "Download Link of the Repoort Artifact => ${{ steps.upload-test-report.outputs.artifact-url }} "

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0