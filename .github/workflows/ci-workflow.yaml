name: CI Workflow

on:
  push:
    branches: [ "dev", "ci-workflow" ]
  pull_request:
    branches: [ "dev" ]

permissions: 
  contents: read

jobs:
#  build-and-test:
#    name: Build and Unit test
#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'

#    - name: Setup Gradle
#      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

#    - name: Build
#      run: ./gradlew build


  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
          command: monitor
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
#  integration-test:
#    name: Integration Test
#    runs-on: ubuntu-latest
#    needs: build-and-test

#    steps:
#      - name: Get the code 
#        uses: actions/checkout@v4

#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'

#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

#      - name: Create and run mongodb docker container
#        id: create-run-mongodb-docker
#        uses: ./.github/actions/run-mongodb-container

#      - name: Install mongosh and create database
#        uses: ./.github/actions/install-mongosh-and-create-db

#      - name: When mongo fail, get failure report
#        if: ${{ failure() }}
#        id: upload-mongo-container-report
#        uses: actions/upload-artifact@v4
#        with:
#          name: mongo-container-report-artifact
#          path: /home/runner/work/_temp
#          retention-days: 1 

#      - name: Make integration tests with Gradle
#        id: make-integration-test
#        run: ./gradlew integrationTest

#      - name: When integration tests fail, get failure report
#        if: ${{ failure() }}
#        id: upload-test-report
#        uses: actions/upload-artifact@v4
#        with:
#          name: integration-test-report-artifact
#          path: ${{ github.workspace }}/build/reports/tests/integrationTest
#          retention-days: 1

#  dependency-submission:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write

#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#    - name: Generate and submit dependency graph
#      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0